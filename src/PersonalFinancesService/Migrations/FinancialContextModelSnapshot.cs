// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalFinancesService.Data;

#nullable disable

namespace PersonalFinancesService.Migrations
{
    [DbContext(typeof(FinancialContext))]
    partial class FinancialContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PersonalFinancesService.Domain.Models.CheckingAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FinancialInstitutionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CheckingAccounts");
                });

            modelBuilder.Entity("PersonalFinancesService.Domain.Models.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckingAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CheckingAccountId")
                        .HasColumnType("int");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Establishment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FixedUntil")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GoalId")
                        .HasColumnType("int");

                    b.Property<int>("InstallmentNumber")
                        .HasColumnType("int");

                    b.Property<int?>("InvestmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFixed")
                        .HasColumnType("bit");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalInstallments")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CheckingAccountId");

                    b.HasIndex("InvestmentId");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("PersonalFinancesService.Domain.Models.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TargetValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("PersonalFinancesService.Domain.Models.Investment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CheckingAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("GoalId")
                        .HasColumnType("int");

                    b.Property<double>("IncomeInterestRate")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CheckingAccountId");

                    b.HasIndex("GoalId");

                    b.ToTable("Investment");
                });

            modelBuilder.Entity("PersonalFinancesService.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PersonalFinancesService.Domain.Models.CheckingAccount", b =>
                {
                    b.HasOne("PersonalFinancesService.Domain.Models.User", null)
                        .WithMany("CheckingAccounts")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PersonalFinancesService.Domain.Models.Entry", b =>
                {
                    b.HasOne("PersonalFinancesService.Domain.Models.CheckingAccount", null)
                        .WithMany("Entries")
                        .HasForeignKey("CheckingAccountId");

                    b.HasOne("PersonalFinancesService.Domain.Models.Investment", null)
                        .WithMany("Entries")
                        .HasForeignKey("InvestmentId");
                });

            modelBuilder.Entity("PersonalFinancesService.Domain.Models.Goal", b =>
                {
                    b.HasOne("PersonalFinancesService.Domain.Models.User", null)
                        .WithMany("Goals")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PersonalFinancesService.Domain.Models.Investment", b =>
                {
                    b.HasOne("PersonalFinancesService.Domain.Models.CheckingAccount", null)
                        .WithMany("Investments")
                        .HasForeignKey("CheckingAccountId");

                    b.HasOne("PersonalFinancesService.Domain.Models.Goal", null)
                        .WithMany("Investments")
                        .HasForeignKey("GoalId");
                });

            modelBuilder.Entity("PersonalFinancesService.Domain.Models.CheckingAccount", b =>
                {
                    b.Navigation("Entries");

                    b.Navigation("Investments");
                });

            modelBuilder.Entity("PersonalFinancesService.Domain.Models.Goal", b =>
                {
                    b.Navigation("Investments");
                });

            modelBuilder.Entity("PersonalFinancesService.Domain.Models.Investment", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("PersonalFinancesService.Domain.Models.User", b =>
                {
                    b.Navigation("CheckingAccounts");

                    b.Navigation("Goals");
                });
#pragma warning restore 612, 618
        }
    }
}
